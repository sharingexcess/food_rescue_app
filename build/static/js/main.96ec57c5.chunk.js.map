{"version":3,"sources":["helpers/constants.js","redux/app/appReducer.js","assets/logo.svg","components/Ellipsis/Ellipsis.js","components/Loading/Loading.js","components/Schedule/Schedule.js","components/Header/Header.js","components/Error/Error.js","redux/auth/authReducer.js","assets/google.svg","components/Auth/Auth.js","components/Menu/Menu.js","components/Tile/Tile.js","components/Home/Home.js","redux/app/appHandler.js","redux/auth/authHandler.js","redux/store.js","index.js","hooks/useWidth.js","helpers/helpers.js"],"names":["FIREBASE_CONFIG","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","createSlice","name","initialState","reducers","setMenu","state","action","menu","payload","setModal","modal","resize","width","mobile","reset","window","innerWidth","actions","Ellipsis","style","useState","text","setText","useEffect","int","setInterval","length","clearInterval","display","textAlign","Loading","id","src","Logo","alt","Schedule","rescues","loading","setLoading","setTimeout","className","map","r","Header","to","Error","auth","login","logout","updateAuth","Auth","children","useSelector","store","dispatch","useDispatch","Login","onClick","Google","firebase","onAuthStateChanged","data","uid","Menu","isOpen","photoURL","displayName","email","close","Tile","icon","link","color","tiles","Home","curHr","Date","getHours","formattedName","includes","split","generateGreeting","t","appHandler","storeAPI","next","type","a","provider","GoogleAuthProvider","signInWithPopup","user","signOut","history","pushState","authHandler","handleLogin","handleLogout","configureStore","reducer","appReducer","authReducer","middleware","Routes","setWidth","updateWidth","addEventListener","removeEventListener","useWidth","exact","path","apps","initializeApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ec57c5.chunk.js","sourcesContent":["// all exports should be of type 'const' with an all caps var name separated by underscores\n\nexport const FIREBASE_CONFIG = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n}\n\nexport const MOBILE_THRESHOLD = 600\n","import { createSlice } from '@reduxjs/toolkit'\nimport { MOBILE_THRESHOLD } from '../../helpers/constants'\n\n// This is a Redux Reducer Slice, which we'll import in src/redux/store.js\n// Slices are part of the ReduxJS Toolkit, used to write modern simple redux\n// Learn more about Redux Slices:\n// https://redux.js.org/tutorials/fundamentals/part-8-modern-redux#writing-slices\n\nconst app = createSlice({\n  // name of slice of global state\n  name: 'app',\n  initialState: initialState,\n  // these 'reducers' will be exported as functions that can be called from React components\n  reducers: {\n    setMenu(state, action) {\n      return {\n        ...state,\n        menu: action.payload,\n      }\n    },\n    setModal(state, action) {\n      return {\n        ...state,\n        modal: action.payload,\n      }\n    },\n    resize(state, action) {\n      // set mobile to true/false only when the screen width crosses the set width\n      if (action.payload.width > MOBILE_THRESHOLD && state.mobile) {\n        return { ...state, mobile: false }\n      }\n      if (action.payload.width < MOBILE_THRESHOLD && !state.mobile) {\n        return { ...state, mobile: true }\n      } else return state\n    },\n    reset() {\n      // use this to return app state to defaults\n      return initialState\n    },\n  },\n})\n\nconst initialState = {\n  menu: false,\n  modal: false,\n  mobile: window.innerWidth < MOBILE_THRESHOLD,\n}\n\nexport const { setMenu, setModal, resize } = app.actions\n\nexport default app.reducer\n","export default __webpack_public_path__ + \"static/media/logo.a8d94ed4.svg\";","import React, { useState, useEffect } from 'react'\n\nexport default function Ellipsis({ style }) {\n  const [text, setText] = useState('.')\n\n  useEffect(() => {\n    const int = window.setInterval(() => {\n      setText(text.length === 3 ? '.' : text + '.')\n    }, 400)\n    return () => window.clearInterval(int)\n  }, [text])\n\n  return (\n    <div\n      style={{\n        display: 'inline-block',\n        width: '1.1rem',\n        textAlign: 'left',\n        ...style,\n      }}\n    >\n      {text}\n    </div>\n  )\n}\n","import React from 'react'\nimport './Loading.scss'\nimport Logo from '../../assets/logo.svg'\nimport Ellipsis from '../Ellipsis/Ellipsis'\n\nexport default function Loading({ text = 'Loading' }) {\n  return (\n    <div id=\"Loading\">\n      <img src={Logo} alt=\"Sharing Excess Logo\" />\n      <h1>\n        {text}\n        <Ellipsis />\n      </h1>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Loading from '../Loading/Loading'\nimport './Schedule.scss'\n\nexport default function Schedule() {\n  const [rescues, setRescues] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 2000)\n  }, [])\n\n  return (\n    <main id=\"Schedule\">\n      <section id=\"ScheduleHeader\">\n        <h1>My Scheduled Rescues</h1>\n        <button className=\"secondary\">View All</button>\n      </section>\n      {loading ? (\n        <Loading text=\"Loading your rescues\" />\n      ) : rescues.length ? (\n        rescues.map(r => <div key={r}>{r}</div>)\n      ) : (\n        <p>You're calendar is clear 😎</p>\n      )}\n    </main>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Logo from '../../assets/logo.svg'\nimport './Header.scss'\n\nexport default function Header() {\n  return (\n    <header id=\"Header\">\n      <Link to=\"/\">\n        <img id=\"Logo\" src={Logo} alt=\"Sharing Excess Logo\" />\n      </Link>\n    </header>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Error.scss'\n\nexport default function Error() {\n  return (\n    <main id=\"Error\">\n      <h1>Uh oh!</h1>\n      <p>The page you're looking for may have moved, or doesn't exist.</p>\n      <Link to=\"/\">\n        <button>back to home page</button>\n      </Link>\n    </main>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\n// This is a Redux Reducer Slice, which we'll import in src/redux/store.js\n// Slices are part of the ReduxJS Toolkit, used to write modern simple redux\n// Learn more about Redux Slices:\n// https://redux.js.org/tutorials/fundamentals/part-8-modern-redux#writing-slices\n\nconst auth = createSlice({\n  // name of slice of global state\n  name: 'auth',\n  initialState: {},\n  // these 'reducers' will be exported as functions that can be called from React components\n  reducers: {\n    login(state, action) {\n      return { ...state, ...action.payload }\n    },\n    logout(state, action) {\n      return {}\n    },\n    updateAuth(state, action) {\n      return { ...state, ...action.payload }\n    },\n  },\n})\nexport const { login, logout, updateAuth } = auth.actions\n\nexport default auth.reducer\n","export default __webpack_public_path__ + \"static/media/google.a170f97e.svg\";","import React, { useEffect, useState } from 'react'\nimport firebase from 'firebase/app'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, updateAuth } from '../../redux/auth/authReducer'\nimport Loading from '../Loading/Loading'\nimport Logo from '../../assets/logo.svg'\nimport Google from '../../assets/google.svg'\nimport './Auth.scss'\n\nexport default function Auth({ children }) {\n  const auth = useSelector(store => store.auth)\n  const [loading, setLoading] = useState(true)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    return firebase.auth().onAuthStateChanged(data => {\n      dispatch(updateAuth(data))\n      setLoading(false)\n    })\n  }, [])\n\n  function Login() {\n    return (\n      <main id=\"Login\">\n        <h1>\n          <span className=\"green\">Sharing</span> Excess\n        </h1>\n        <img className=\"background\" src={Logo} alt=\"Sharing Excess Logo\" />\n        <button onClick={() => dispatch(login())}>\n          <img src={Google} alt=\"Google Logo\" />\n          Sign in with Google\n        </button>\n      </main>\n    )\n  }\n\n  return loading ? (\n    <Loading text={'Signing in'} />\n  ) : auth.uid ? (\n    <>{children}</>\n  ) : (\n    <Login />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { setMenu } from '../../redux/app/appReducer'\nimport { logout } from '../../redux/auth/authReducer'\nimport './Menu.scss'\n\nexport default function Menu() {\n  const isOpen = useSelector(store => store.app.menu)\n  const { photoURL, displayName, email } = useSelector(store => store.auth)\n  const dispatch = useDispatch()\n\n  function close() {\n    dispatch(setMenu(false))\n  }\n\n  return (\n    <>\n      <div\n        id=\"MenuBackground\"\n        className={isOpen ? 'open' : 'closed'}\n        onClick={close}\n      />\n      <aside id=\"Menu\" className={isOpen ? 'open' : 'closed'}>\n        <div id=\"UserProfile\">\n          <img\n            src={photoURL}\n            id=\"ProfileImg\"\n            alt=\"User\"\n            onClick={() => dispatch(setMenu(true))}\n          />\n          <div>\n            <h2 id=\"UserName\">{displayName}</h2>\n            <h3 id=\"UserEmail\">{email}</h3>\n          </div>\n          <i id=\"Close\" className=\"fa fa-times\" onClick={close} />\n        </div>\n        <div id=\"MenuContent\">\n          <ul>\n            <li onClick={() => dispatch(setMenu(false))}>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li onClick={() => dispatch(setMenu(false))}>\n              <Link to=\"/schedule\">Schedule</Link>\n            </li>\n            <li onClick={() => dispatch(logout())}>Logout</li>\n          </ul>\n        </div>\n      </aside>\n    </>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Tile.scss'\n\nexport default function Tile({ name, icon, link, color }) {\n  return (\n    <Link className=\"Tile\" id={name} to={link}>\n      <div>\n        <i className={`fa ${icon}`} />\n        <h4>{name}</h4>\n      </div>\n    </Link>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Tile from '../Tile/Tile'\nimport './Home.scss'\n\nconst tiles = [\n  {\n    name: 'My Schedule',\n    icon: 'fa-calendar',\n    link: '/schedule',\n  },\n  {\n    name: 'View All Rescues',\n    icon: 'fa-calendar',\n    link: '/rescues',\n  },\n  {\n    name: 'Account',\n    icon: 'fa-user',\n    link: '/account',\n  },\n  {\n    name: 'Create New Rescue',\n    icon: 'fa-plus',\n    link: '/create',\n  },\n]\n\nexport default function Home() {\n  const displayName = useSelector(store => store.auth.displayName)\n\n  function generateGreeting() {\n    var today = new Date()\n    var curHr = today.getHours()\n    const formattedName = displayName.includes(' ')\n      ? displayName.split(' ')[0]\n      : displayName\n    if (curHr < 12) {\n      return `Good Morning, ${formattedName} ☀️`\n    } else if (curHr < 18) {\n      return `Good Afternoon, ${formattedName} 😊`\n    } else {\n      return `Good Evening, ${formattedName} 🌙`\n    }\n  }\n  return (\n    <main id=\"Home\">\n      <h1>{generateGreeting()}</h1>\n      <section id=\"Tiles\">\n        {tiles.map(t => (\n          <Tile key={t.name} {...t} />\n        ))}\n      </section>\n    </main>\n  )\n}\n","// This file is REDUX MIDDLEWARE. We use middleware to run async logic like login and logout.\n// It's important to do this *outside* of the actual reducer logic,\n// so that the reducers are always pure functions (no side effects).\n// Read more about redux middleware:\n// https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-middleware-to-enable-async-logic\n\n// appHandler is a wrapper function, around a wrapper function, around a wrapper function.\n// This seems super scary => it's not. Think of it as a function with 3 arguments.\n\n// storeAPI: this is literally just the redux store object, plain and simple.\n// next: this is the function call to the actual reducer itself.\n// action: this is what was passed into the dispatch function call.\n//         it'll have a 'type' field denoting which reducer to run,\n//         and a 'payload' field with the actual data it wants to pass.\n\n// We'll commonly call next(action) at the end of a handler function to pass the action on to the reducer.\n\n// appHandler is currently an empty function that will always just pass the data straight to the reducer.\n// we'll keep this logic here in case we want to add functionality like we do in authHandler later.\nconst appHandler = storeAPI => next => action => {\n  switch (action.type) {\n    default:\n      return next(action)\n  }\n}\n\nexport default appHandler\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\n\n// This file is REDUX MIDDLEWARE. We use middleware to run async logic like login and logout.\n// It's important to do this *outside* of the actual reducer logic,\n// so that the reducers are always pure functions (no side effects).\n// Read more about redux middleware:\n// https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-middleware-to-enable-async-logic\n\n// authHandler is a wrapper function, around a wrapper function, around a wrapper function.\n// This seems super scary => it's not. Think of it as a function with 3 arguments.\n\n// storeAPI: this is literally just the redux store object, plain and simple.\n// next: this is the function call to the actual reducer itself.\n// action: this is what was passed into the dispatch function call.\n//         it'll have a 'type' field denoting which reducer to run,\n//         and a 'payload' field with the actual data it wants to pass.\n\n// We'll commonly call next(action) at the end of a handler function to pass the action on to the reducer.\nconst authHandler = storeAPI => next => action => {\n  switch (action.type) {\n    case 'auth/login':\n      handleLogin(storeAPI, next, action)\n      break\n    case 'auth/logout':\n      handleLogout(storeAPI, next, action)\n      break\n    default:\n      return next(action)\n  }\n}\n\n// handle logging a user in with google oauth.\n// perform the login using firebase methods,\n// grab the user object we got as a response,\n// and set the action:payload to that user object.\n// this will store the user data in redux to be accessed by react components.\nasync function handleLogin(storeAPI, next, action) {\n  const provider = new firebase.auth.GoogleAuthProvider()\n  const { user } = await firebase.auth().signInWithPopup(provider)\n  return next({ ...action, payload: user })\n}\n\n// handle logging out an authenticated user.\n// perform logout using firebase methods\n// call reducer with next(action) to clear out auth state\n// redirect to root url\nasync function handleLogout(storeAPI, next, action) {\n  const auth = firebase.auth()\n  const res = await auth.signOut()\n  window.history.pushState({}, null, '/') // redirect to root url\n  return next(action)\n}\n\nexport default authHandler\n","import { configureStore } from '@reduxjs/toolkit'\nimport appReducer from './app/appReducer'\nimport appHandler from './app/appHandler'\nimport authReducer from './auth/authReducer'\nimport authHandler from './auth/authHandler'\n\n// This is our root redux object, created using configureStore method\n// configureStore is part of the ReduxJS Toolkit, a library used to write modern simple redux\n// Learn more about configureStore:\n// https://redux.js.org/tutorials/fundamentals/part-8-modern-redux#using-configurestore\n\nconst store = configureStore({\n  // import slices for reducers\n  reducer: {\n    app: appReducer,\n    auth: authReducer,\n  },\n  // import handlers for middleware\n  middleware: [appHandler, authHandler],\n})\n\nexport default store\n","import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { initializeFirebase } from './helpers/helpers'\nimport { resize } from './redux/app/appReducer'\nimport Schedule from './components/Schedule/Schedule'\nimport Header from './components/Header/Header'\nimport Error from './components/Error/Error'\nimport Auth from './components/Auth/Auth'\nimport Menu from './components/Menu/Menu'\nimport Home from './components/Home/Home'\nimport useWidth from './hooks/useWidth'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './styles/index.scss'\n\ninitializeFirebase()\n\nfunction Routes() {\n  const width = useWidth()\n\n  useEffect(() => {\n    // any time the screen width changes, handle the resize with this dispatch call\n    store.dispatch(resize({ width }))\n  }, [width])\n\n  return (\n    <BrowserRouter>\n      {/* Header and Menu will be rendered on all routes because it is outside the Switch */}\n      <Header />\n      <Menu />\n      {/* Switch will only allows the first matching route to be rendered */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/schedule\">\n          <Schedule />\n        </Route>\n        {/* This route has no path, and therefore will be the 'catch all' */}\n        <Route>\n          {/* this 404 page component will render if the url does not match any other routes */}\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\n// this function call will render our React app into the DOM inside <div id='root'>\n// you can find that div in public/index.html\nReactDOM.render(\n  <React.StrictMode>\n    {/* this Provider component wraps our app in a component that gives access to the Redux store */}\n    <Provider store={store}>\n      {/* Auth component handles login and will show a login page if no user is authenticated */}\n      <Auth>\n        {/* Routes component contains the rest of the apps UI components */}\n        <Routes />\n      </Auth>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { useState, useEffect } from 'react'\n\nexport default function useWidth() {\n  const [width, setWidth] = useState(window.innerWidth)\n  useEffect(() => {\n    window.addEventListener('resize', updateWidth)\n    return () => window.removeEventListener('resize', updateWidth)\n  })\n\n  function updateWidth() {\n    setWidth(window.innerWidth)\n  }\n\n  return width\n}\n","import { FIREBASE_CONFIG } from './constants'\n\nexport function initializeFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(FIREBASE_CONFIG)\n  } else {\n    firebase.app() // if already initialized, use that one\n  }\n}\n"],"sourceRoot":""}